<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<context:annotation-config />
	<!-- 对web包中的所有类进行扫描,以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.sxtj.mobilehis.usertest.*">
	</context:component-scan>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>
	
<!-- His DataSource Configuration -->
	<bean id="dataSourceHis" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.his.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.his.url}" />
		<property name="user" value="${jdbc.his.username}" />
		<property name="password" value="${jdbc.his.password}" />
	</bean>
	
	<bean id="sessionFactoryHis" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceHis" />
		<property name="packagesToScan">
			<list>
				<value>com.sxtj.mobilehis.usertest.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.his.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="connection.autocommit">true</prop>
			<!--  <prop key="hibernate.hbm2ddl.auto">create</prop> -->
			</props>
		</property>
		<property name="jtaTransactionManager">  
			<ref bean="transactionManager" />
		</property>
	</bean>
	
	<bean id="jdbcTemplateHis" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name = "dataSource" ref="dataSourceHis"/> 
	</bean>
	
<!-- Php DataSource Configuration -->
	<bean id="dataSourcePhp" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.php.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.php.url}" />
		<property name="user" value="${jdbc.php.username}" />
		<property name="password" value="${jdbc.php.password}" />
	</bean>
	
	<bean id="sessionFactoryPhp" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourcePhp" />
		<property name="packagesToScan">
			<list>
				<value>com.sxtj.mobilehis.usertest.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.php.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="connection.autocommit">true</prop>
			<!--  <prop key="hibernate.hbm2ddl.auto">create</prop> -->
			</props>
		</property>
		<property name="jtaTransactionManager">  
			<ref bean="transactionManager" />  
		</property>
	</bean>
	
	<bean id="jdbcTemplatePhp" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name = "dataSource" ref="dataSourcePhp"/>
	</bean>
	
<!--
	<bean id="databaseHisDao" class="com.sxtj.mobilehis.usertest.dao.impl.HisBaseDaoImp">
		<property name="sessionFactory"><ref local="sessionFactoryHis"/></property>
	</bean>
	<bean id="databasePhpDao" class="com.sxtj.mobilehis.usertest.dao.impl.PhpBaseDaoImp">
		<property name="sessionFactory"><ref local="sessionFactoryPhp"/></property>
	</bean>
	
	<bean id="databaseBusinessService" class="com.sxtj.mobilehis.usertest.service.impl.DatabaseBussinessServiceImp">
		<property name="hisBaseDao"><ref local="databaseHisDao"/></property>
		<property name="phpBaseDao"><ref local="databasePhpDao"/></property>
	</bean>
  
	<bean id="databaseBusiness" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property>
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
		<property name="target">
			<ref local="databaseBusinessService"></ref>
		</property>
	</bean>
-->
	
	
	
	
	
	
<!--  
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource"><ref bean="dataSource"/></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
-->
	
	<bean id="jotm" class="com.sxtj.mobilehis.usertest.JotmFactoryBean">  
		<property name="defaultTimeout" value="500000"/>
	</bean>
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="userTransaction" ref="jotm"></property>
	</bean>
	
	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="execution(public * com.sxtj.mobilehis.usertest.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/> 
			<tx:method name="*" read-only="true" rollback-for="com.springTest.util.DaoException"/>
		</tx:attributes>
	</tx:advice>
	
</beans>